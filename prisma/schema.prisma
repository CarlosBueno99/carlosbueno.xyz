// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model DiscordBot {
  id        String           @id @default(cuid())
  name      String
  channel   String
  imageUrl  String
  type      String
  messages  DiscordMessage[]
  createdAt DateTime         @default(now())
}

model DiscordMessage {
  id          String     @id @default(cuid())
  messageText String
  bot         DiscordBot @relation(fields: [botId], references: [id])
  botId       String

  @@index([botId])
}

model DiscordWebhook {
  id         String   @id @default(cuid())
  name       String
  webhookUrl String
  owner      User     @relation(fields: [ownerId], references: [id])
  ownerId    String
  createdAt  DateTime @default(now())

  @@index([ownerId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_in        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum Role {
  USER
  ADMIN
}

enum Subscription {
  FREE
  STARTER
  PRO
  SUPER
}

model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  subscription  Subscription     @default(FREE)
  role          Role             @default(USER)
  webhooks      DiscordWebhook[]
  createdAt     DateTime         @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
